Stack:
	> Vue3 for Frontend
	> Supabase for Backend and Auth
	> Pinia for State Management
	> ShadCN-vue components
	> TailwindCSS for styling


Pages:
	> Home Page - TCG Selector
	> The Trader
	> Login/Register form
	> My Account
	    > Collections
	    > Wishlist
	    > Trades
	> Forgotten Password
	> 404 Not Found

Components:
	> Navbar
	> Footer
	> TCG Selector
	> Trader
	> Card Selections
	> Button
	> Login Form
	> Register Form
	> Account Components
	    > Collections
	    > Wishlist
	    > Trades

Pinia: 
	> State management to be used for API calls.
		> Pokemon State
		> MTG State
		> Yu-Gi-Oh State


Database:
    Users:
        > First Name
        > Last Name
        > Username
        > Email
        > Password
        > Avatar
        > Wishlist []
        > Trades []
        > Collection []


{
      path: '/about',
      name: 'about',
      // route level code-splitting
      // this generates a separate chunk (About.[hash].js) for this route
      // which is lazy-loaded when the route is visited.
      component: () => import('../views/AboutView.vue'),
    },



    <script setup lang="ts">
    import { ref } from 'vue'
    import useAuthUser from '@/composable/AuthUser.ts'
    import { useRouter } from "vue-router";

    import {Button} from '@/components/ui/button/index.js';

    const router = useRouter();
    const { signUp } = useAuthUser();

    const form = ref({
      name: "",
      email: "",
      password: "",
    })

    const handleSignup = async () => {
      try {
        await signUp(form.value);

        await router.push({
          name: "EmailConfirmation",
          query: {email: form.value.email},
        });
      } catch (error) {
        alert(error.message);
      }
    }

    </script>

    <template>
      <form class="max-w-2xl m-auto flex flex-col p-10 rounded-lg" @submit.prevent="handleSignup">
        <h1 class="text-4xl underline uppercase font-bold text-center mb-5 dark:text-white text-black">Register</h1>
        <label>Name:</label>
        <input v-model="form.name" type="text">

        <label>Email:</label>
        <input v-model="form.email" type="email">

        <label>Password:</label>
        <input v-model="form.password" type="password">
        <Button type="submit" class="mt-5 hover:bg-blue-950">Register</Button>
      </form>
    </template>

    <style scoped>

    </style>